{"version":3,"sources":["serviceWorker.js","components/Landing/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","constants/routes.js","components/terms/terms.js","components/SignUp/index.js","components/PasswordForget/index.js","constants/roles.js","components/SignIn/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/SignUp/instructorsignup.js","components/SignUp/selecttype.js","components/Home/instructorhome.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Landing","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","HOME","HOMEI","Popupt","trigger","className","modal","closeOnDocumentClick","style","width","INITIAL_STATE","username","passwordOne","passwordTwo","institution","currentstudy","error","SignUpFormBase","onSubmit","event","state","then","authUser","set","setState","history","push","ROUTES","catch","preventDefault","onChange","target","name","value","isInvalid","type","placeholder","disabled","message","SignUpLink","to","SignUpForm","withRouter","SignUpPage","complete","PasswordForgetFormBase","id","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","INSTRUCTOR","SignInFormBase","condition","roles","includes","ROLES","SignInForm","compose","SignInPage","onClick","AuthUserContext","withAuthentication","WithAuthentication","listener","onAuthStateChanged","Provider","withAuthorization","WithAuthorization","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","Object","keys","map","key","off","UserList","academics","SignUpPageInstructor","selectAccountType","exact","path","component","LandingPage","HomePage","AccountPage","HomePageI","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46980bc3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyBEIuRWPoRvtYF5A2RHTighZgLYSiCx2UM\",\n  authDomain: \"zagoo-ebe63.firebaseapp.com\",\n  databaseURL: \"https://zagoo-ebe63.firebaseio.com\",\n  projectId: \"zagoo-ebe63\",\n  storageBucket: \"zagoo-ebe63.appspot.com\",\n  messagingSenderId: \"1062317982625\",\n  appId: \"1:1062317982625:web:6549dd8c42b180302fc1e0\",\n  measurementId: \"G-233TNJJEE0\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/';\nexport const LANDING = '/signin';\nexport const HOME = '/home';\nexport const HOMEI = '/homei';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const INSTRUCTOR_SIGNUP = '/instructor-signup';\nexport const SELECTTYPE = '/selecettype';\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './terms.css';\n\nclass Popupt extends React.Component {\n    render(){\n        return(\n            <Popup\n            trigger={  <p className=\"button\">By clicking Sign Up you agree to our  <a className=\"terms\" >Terms,Data policy and cookie policy </a></p>}\n            modal\n            closeOnDocumentClick\n          >\n            <span style={{width:'1000px'}}> \n                <h1>Terms And Conditions</h1><br></br>\n                <p >These are our terms and conditions please read them carefully and understand them carefully before \n                    you create an account.\n                </p>\n            </span>\n            <h4></h4>\n          </Popup>\n        )\n    }\n}\nexport default Popupt;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './landingsign.css';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport Popupt from '../terms/terms';\n\nconst SignUpPage = () => (\n  <div>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  institution:'',\n  currentstudy:'',\n  error: null\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      institution,\n      currentstudy\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"username\"\n      //     value={username}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Full Name\"\n      //   />\n      //   <input\n      //     name=\"institution\"\n      //     value={institution}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Institution Name\"\n      //   />\n      //   <input\n      //     name=\"currentstudy\"\n      //     value={currentstudy}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Current Study\"\n      //   />\n        \n      //   <input\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <input\n      //     name=\"passwordOne\"\n      //     value={passwordOne}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Password\"\n      //   />\n      //   <input\n      //     name=\"passwordTwo\"\n      //     value={passwordTwo}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Confirm Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Sign Up\n      //   </button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n      <section className=\"hero-Section\"> \n      <div>\n          <div className=\"zagoo_main\">\n              <h1>Zagoo Student</h1>\n              <hr className =\"line\"></hr>\n              <p>Sign up as a student\n                       and organise your <br></br>\n                        school work more efficiently.Zagoo allows you to engage <br></br>with the tertiary \n                       community and helps assist you in acquiring\n                       vast <br></br>\n                       knowledge and expreince as you aim to attain a good degree \n              <br></br>\n              <br></br>   \n              <hr className =\"line\"></hr>\n              </p>\n          </div>\n          <div className=\"login-page\">\n              <div className=\"form\">\n                  {/* <h5 >Student Registration</h5> */}\n                   <form className=\"hero-subscribe-from\" onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"institution\"\n          value={institution}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Institution Name\"\n        />\n        <input\n          name=\"currentstudy\"\n          value={currentstudy}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Current Study\"\n        />\n        \n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n         <Popupt/>\n        <button className=\"site-btn sb-gradients\"  disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n                  {error && <p>{error.message}</p>}\n              </div>\n          </div>\n      </div>\n  </section>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SELECTTYPE}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport './landing.css';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n  complete:''\n  // display:false\n};\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n  \n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ \n        email: '',\n        error: null,\n        complete:'Please visit your email and click on the link provided'})\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ complete:'',\n    [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error,complete} = this.state;\n    // const [showText, setShowText] = useState(false);\n\n    const isInvalid = email === '';\n\n    return (\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"email\"\n      //     value={this.state.email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Reset My Password\n      //   </button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n      <section className=\"hero-Section\"> \n      <div>\n          <div className=\"zagoo_main\">\n              <h1>Zagoo</h1>\n              <hr className =\"line\"></hr>\n              <p>Zagoo is a free social learning plartfrom<br></br>\n              built to simulate real classroom discussions. We help <br></br>\n              lectures, proffessors, teachers and tutors to effiecintly <br></br>\n              manage, monitor and organize their class question and answers<br></br>\n              at the same time helping their students to easily collaborate <br></br>\n              and get quality answers promptly \n              <br></br>\n              <br></br>   \n              <hr className =\"line\"></hr>\n              </p>\n          </div>\n          <div className=\"login-page\">\n              <div className=\"form\">\n                  <h5 >Type in your email</h5>\n                  <form className=\"hero-subscribe-from\" onSubmit={this.onSubmit}>\n                      <label id=\"selectFrom\" >\n                          <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.onChange} placeholder=\"Email\" />\n                      </label>\n                      <br></br>\n                      <br></br>\n                      <button className=\"site-btn sb-gradients\"  disabled={isInvalid} >Reset My Password</button>\n                  </form>\n                  <SignUpLink />\n                  {complete && <p>{complete}</p>}\n                  {error && <p>{error.message}</p>}\n              </div>\n          </div>\n      </div>\n  </section>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","export const INSTRUCTOR = 'instructor';","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport './landing.css';\n\nconst SignInPage = () => (\n  <div> \n  <div>\n    </div>\n    <div>\n    <SignInForm />\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  condition = authUser =>\n  authUser && authUser.roles.includes(ROLES.INSTRUCTOR);\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        \n        if(this.condition === false){\n          this.props.history.push(ROUTES.HOMEI);\n        }else{\n          this.props.history.push(ROUTES.HOME);\n        }\n        \n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      // <form onSubmit={this.onSubmit}>\n\n      //   <TextField\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     label=\"Email Address\"\n      //     margin=\"normal\"\n      //     variant=\"outlined\"\n      //   />\n      //   <br></br>\n      //   <TextField\n      //     name=\"password\"\n      //     value={password}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     label=\"Password\"\n      //     margin=\"normal\"\n      //     variant=\"outlined\"\n      //   /><br></br>\n      //   <Button \n      //   disabled={isInvalid} \n      //   type=\"submit\"\n      //   variant=\"contained\" color=\"secondary\" \n      //   >\n      //     Sign In\n      //   </Button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n      <section className=\"hero-Section\"> \n      <div>\n          <div className=\"zagoo_main\">\n              <h1>Zagoo</h1>\n              <hr className =\"line\"></hr>\n              <p>Zagoo is a free social learning plartfrom<br></br>\n              built to simulate real classroom discussions. We help <br></br>\n              lectures, professors, teachers and tutors to efficiently <br></br>\n              manage, monitor and organize their class question and answers<br></br>\n              at the same time helping their students to easily collaborate <br></br>\n              and get quality answers promptly ! \n              <br></br>\n              <br></br>   \n              <hr className =\"line\"></hr>\n              </p>\n          </div>\n          <div className=\"login-page\">\n              <div className=\"form\">\n                  <h5 >login</h5>\n                  <form className=\"hero-subscribe-from\" onSubmit={this.onSubmit}>\n                      <label id=\"selectFrom\" >\n                          <input type=\"text\" name=\"email\" value={email} onChange={this.onChange} placeholder=\"Email\" />\n                      </label>\n                      <br></br>\n                      <label id=\"selectFrom\" >\n                          <input type=\"password\" name=\"password\" value={password} onChange={this.onChange} placeholder=\"Password\" />\n                      </label>\n                      <br></br>\n                      <button className=\"site-btn sb-gradients\"  disabled={isInvalid} >Sign In</button>\n                      <PasswordForgetLink />\n                      <SignUpLink />\n                  </form>\n                  {error && <p>{error.message}</p>}\n              </div>\n          </div>\n      </div>\n  </section>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport Signout from '../SignOut/index';\nimport { withAuthorization } from '../Session';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>Welcome to the hompage </p>\n    <Link to={ROUTES.ACCOUNT}>Account</Link><br></br><br></br>\n    <Signout/>\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n// import { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { withAuthorization } from '../Session';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        {/* <PasswordForgetForm /> */}\n        <PasswordChangeForm />\n        <Link to={ROUTES.HOME}>Home</Link>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst authCondition = authUser => !!authUser;\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default withFirebase(AdminPage);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as ROLES from '../../constants/roles';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport Popupt from '../terms/terms';\n\nconst SignUpPageInstructor = () => (\n  <div>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  institution:'',\n  academics:'',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne,institution,academics } = this.state;\n    const roles = {};\n    \n        roles[ROLES.INSTRUCTOR] = ROLES.INSTRUCTOR;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            roles\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOMEI);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      institution,\n      currentstudy,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <section className=\"hero-Section\"> \n      <div>\n          <div className=\"zagoo_main\">\n              <h1>Zagoo Instructor</h1>\n              <hr className =\"line\"></hr>\n              <p>Sign up as a Lecturer and efficiently manage and <br></br>\n                        organise your class using zagoo. Zagoo allows you to stream your <br></br>\n                        your class sessions and engange into a tertiary community that is <br></br>\n                        highly efficient and organised!\n              <br></br>\n              <br></br>   \n              <hr className =\"line\"></hr>\n              </p>\n          </div>\n          <div className=\"login-page\">\n              <div className=\"form\">\n                  {/* <h5 >Student Registration</h5> */}\n                   <form className=\"hero-subscribe-from\" onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"institution\"\n          value={institution}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Institution Name\"\n        />\n        <input\n          name=\"currentstudy\"\n          value={currentstudy}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Current Study\"\n        />\n        \n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n         <Popupt/>\n        <button className=\"site-btn sb-gradients\"  disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n                  {error && <p>{error.message}</p>}\n              </div>\n          </div>\n      </div>\n  </section>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPageInstructor;\n\nexport { SignUpForm, SignUpLink };\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './landing1.css';\n\nconst selectAccountType = ()=>(\n    // <div>\n    //     Select your account type \n    //     <Link to='/signup'>  Student Account  </Link> <Link to='/instructor-signup'>  Instructor Account  </Link>\n    // </div>\n    <section className=\"hero-Section1\"> \n                    <div className=\"zagoo_main\">\n                        <h1>Zagoo Lecturer </h1>\n                        <hr className =\"line\"></hr>\n                        <p>Sign up as a Lecturer and efficiently manage and <br></br>\n                        organise your class using zagoo. Zagoo allows you to stream your <br></br>\n                        your class sessions and engange into a tertiary community that is <br></br>\n                        highly efficient and organised!\n                        <br></br>\n                        <br></br>\n                        <Link to=\"/instructor-signup\"> <button className=\" form site-btn sb-gradients\" >Sign Up</button></Link>\n                        <br></br>\n                        <br></br>   \n                        {/* <hr className =\"line\"></hr> */}\n                        </p>\n                    </div>\n\n                <div className=\"zagoo_mains\">\n                    <h1>Zagoo Student </h1>\n                    <hr className=\"line\"></hr>\n                    <p className=\"font\">Sign up as a student\n                       and organise <br></br>\n                       your school work more efficiently.Zagoo allows you to engage with <br></br>\n                       the tertiary \n                       community and helps assist you in acquiring <br></br>\n                       vast knowledge and expreince as you aim to attain a good degree \n                        <br></br>\n                        <br></br>\n                        <Link to=\"/signup\"> <button className=\" form site-btn sb-gradients\" >Sign Up</button></Link>\n                        <br></br>\n                        <br></br>\n                        {/* <hr className=\"line\"></hr> */}\n                    </p>\n                </div>\n            </section>\n)\n\nexport default selectAccountType;","import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nconst HomePageI = () => (\n  <div>\n    <h1>Welcome to the Wizard</h1>\n    <p>Let me help you set up your first class</p>\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePageI);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// import Navigation from '../Navigation';\n// import SignOutButton from '../SignOut';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport SignUpPageInstructor from '../SignUp/instructorsignup';\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\nimport selectAccountType from '../SignUp/selecttype';\nimport HomePageI from '../Home/instructorhome';\n\nconst App = () => (\n  <Router>\n    <div>\n    {/* <Navigation/> */}\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n      <Route exact path={ROUTES.INSTRUCTOR_SIGNUP} component={SignUpPageInstructor} />\n      <Route exact path={ROUTES.SELECTTYPE } component={selectAccountType} />\n      <Route exact path={ROUTES.HOMEI } component={HomePageI} />\n\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}